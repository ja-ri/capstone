import cv2
import numpy as np
import matplotlib.pyplot as plt
import pygame
import sys


# Initialize Pygame
pygame.init()

# Set the width and height of the screen (adjust as needed)
SCREEN_WIDTH = 1280
SCREEN_HEIGHT = 768

# Set up the screen
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Drawing with Pygame")

# Set colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Set circle parameters
circle_radius = 10  # Adjust as needed

# Open camera
cap = cv2.VideoCapture(2)  # Use 0 for the default camera, change if you have multiple cameras

while(cap.isOpened()):
    ret, frame = cap.read()
    if not ret:
        break

    # Flip the frame vertically
    frame = cv2.flip(frame, 0)

    # Convert frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Thresholding to isolate bright areas (IR light)
    _, thresh = cv2.threshold(gray, 200, 255, cv2.THRESH_BINARY)

    # Find contours
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Iterate through contours
    for contour in contours:
        # Compute centroid of contour
        M = cv2.moments(contour)
        if M["m00"] != 0:
            cX = int(M["m10"] / M["m00"])
            cY = int(M["m01"] / M["m00"])

            # Draw centroid on the frame
            cv2.circle(frame, (cX, cY), 5, (0, 0, 255), -1)
            # Print normalized coordinates
            video_height, video_width, _ = frame.shape
            normalized_cX = cX / video_width
            normalized_cY = cY / video_height
            print("Normalized coordinates (x, y):", int(cX * SCREEN_WIDTH / frame.shape[1]), int(cY * SCREEN_HEIGHT / frame.shape[0]))

            # Draw circle at the centroid in Pygame
            pygame.draw.circle(screen, RED, (int(cX * SCREEN_WIDTH / frame.shape[1]), int(cY * SCREEN_HEIGHT / frame.shape[0])), circle_radius)


    # Update the display
    pygame.display.flip()

    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_q:
                cap.release()
                cv2.destroyAllWindows()
                pygame.quit()
                sys.exit()
            elif event.key == pygame.K_c:
                screen.fill(WHITE)